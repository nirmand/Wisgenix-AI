name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  ASPNETCORE_ENVIRONMENT: "Production"
  AZURE_WEBAPP_NAME: Wisgenix-ContentService
  AZURE_WEBAPP_PACKAGE_PATH: './publish'
  DOTNET_VERSION: '9.x'
  SOLUTION_PATH: "./src/Content.sln"
  API_PROJECT_PATH: "./src/Content.API/Content.API.csproj"
  PUBLISH_DIR: "./publish"
  ARTIFACTS_DIR: "./src/Content.API/publish" # Artifacts will be picked from this directory
  DB_CONTEXT_NAME: "ContentDbContext"
  DB_PROVIDER: "SqlServer"
  AZURE_RESOURCE_GROUP: "Wisgenix-Prod"
  AZURE_SQL_SERVER: "wisgenix-sqlserver"

on:
  workflow_dispatch:

permissions: #Required for OIDC federated authentication for GitHub workflow
  contents: read
  id-token: write

jobs:
  build:  
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: .NET Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release
        
      - name: Test
        run: dotnet test ${{ env.SOLUTION_PATH }} --filter Category!=Ignore --configuration Release --no-restore --no-build --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: "sqlite-db"
          DatabaseProvider: "Sqlite"
        
      - name: Publish Artifacts
        run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore --no-build --property:PublishDir=${{ env.PUBLISH_DIR }}

      - name: Install EF Core CLI tool
        run: dotnet tool install --global dotnet-ef

      - name: Azure Login with OIDC for DB Migration
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_DB_DEPLOY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Get public IP address
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Add firewall rule for runner IP
        run: |
          az sql server firewall-rule create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --server ${{ env.AZURE_SQL_SERVER }} \
            --name 'GitHubActionsIP' \
            --start-ip-address '${{ steps.ip.outputs.ipv4 }}' \
            --end-ip-address '${{ steps.ip.outputs.ipv4 }}'
        shell: bash
        id: add_firewall_rule
        
      - name: Apply Entity Framework Migrations
        run: dotnet ef database update --project Content.Infrastructure/Content.Infrastructure.csproj --startup-project Content.API/Content.API.csproj --context ${{ env.DB_CONTEXT_NAME }}
        working-directory: ./src/
        env:
          ConnectionStrings__DefaultConnection: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
          DatabaseProvider: ${{ env.DB_PROVIDER }}

      - name: Remove firewall rule
        if: always()
        run: |
          az sql server firewall-rule delete \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --server ${{ env.AZURE_SQL_SERVER }} \
            --name 'GitHubActionsIP'
        shell: bash
        id: remove_firewall_rule

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.ARTIFACTS_DIR }}

  deploy:
    name: Deploy as Azure App

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Azure Login with OIDC for App Deploy
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_WEBAPP_DEPLOY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
